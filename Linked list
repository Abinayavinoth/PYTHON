class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
    
class singlelinkedlist:
    def __init__(self):
        self.head=None
    
    def insert_begining(self,data):
        nb=Node(data)
        nb.next=self.head
        self.head=nb
    
    def insert_end(self,data):
        ne=Node(data)
        temp=self.head
        while temp.next:
            temp=temp.next
        temp.next=ne
    
    def insert_position(self,pos,data):
        np=Node(data)
        temp=self.head
        for i in range (pos-1):
            temp=temp.next
        np.data=data
        np.next=temp.next
        temp.next=np
        
        
    
    def display(self):
        if self.head is None:
            print("Linked list is empty")
        else:
            temp=self.head
            while temp:
                print(temp.data,'-->',end="")
                temp=temp.next

L= singlelinkedlist()
n=Node(10)
L.head=n
n1=Node(20)
L.head.next=n1
n2=Node(30)
n1.next=n2
n3=Node(40)
n2.next=n3
L.insert_begining(25)
L.insert_end(100)
L.insert_position(4,60)
L.display()


class Node:
    def __init__(self,x):
        self.data=x
        self.next=None
class stack:
    def __init__(self):
        self.top=None
    def push(self):
        x=int(input("enter element to be inserted"))
        new=Node(x)
        if self.top is None:
            self.top=new
            self.top.next=None
        else:
            new.next=self.top
            self.top=new
    def pop(self):
        if self.top is None:
            print("Stack is empty")
        elif self.top.next is None:
            print("popped element:",self.top.data)
            self.top=None
        else:
            temp=self.top
            print("popped element:",self.top.data)
            self.top=temp.next
            temp=None
   
    def display(self):
        if self.top is None:
            print("Stack is empty")
        else:
            print("elements of the stacks are:")
            temp=self.top
            while temp:
                print(temp.data)
                temp=temp.next
            print("top of the stack is",self.top.data)

s = stack()
while(1):
    print("enter the option below")
    print("1- Push \n2-Pop\n3Display\n4-Exit")
    option=int(input())
    if option==1:
        print("Push")
        s.push()
    elif option==2:
        print("Pop")
        s.pop()
    elif option==3:
        print("Display")
        s.display()
    else:
        break

